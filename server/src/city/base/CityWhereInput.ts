/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttractionListRelationFilter } from "../../attraction/base/AttractionListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { FoodPlaceListRelationFilter } from "../../foodPlace/base/FoodPlaceListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { StartStopPlaceListRelationFilter } from "../../startStopPlace/base/StartStopPlaceListRelationFilter";
@InputType()
class CityWhereInput {
  @ApiProperty({
    required: false,
    type: () => AttractionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AttractionListRelationFilter)
  @IsOptional()
  @Field(() => AttractionListRelationFilter, {
    nullable: true,
  })
  attractions?: AttractionListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  code?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  country?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => FoodPlaceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FoodPlaceListRelationFilter)
  @IsOptional()
  @Field(() => FoodPlaceListRelationFilter, {
    nullable: true,
  })
  foodPlaces?: FoodPlaceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => StartStopPlaceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StartStopPlaceListRelationFilter)
  @IsOptional()
  @Field(() => StartStopPlaceListRelationFilter, {
    nullable: true,
  })
  startStopPlaces?: StartStopPlaceListRelationFilter;
}
export { CityWhereInput };
