/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Attraction } from "../../attraction/base/Attraction";
import { ValidateNested, IsOptional, IsString, IsDate } from "class-validator";
import { Type } from "class-transformer";
import { FoodPlace } from "../../foodPlace/base/FoodPlace";
import { StartStopPlace } from "../../startStopPlace/base/StartStopPlace";
@ObjectType()
class City {
  @ApiProperty({
    required: false,
    type: () => [Attraction],
  })
  @ValidateNested()
  @Type(() => Attraction)
  @IsOptional()
  attractions?: Array<Attraction>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [FoodPlace],
  })
  @ValidateNested()
  @Type(() => FoodPlace)
  @IsOptional()
  foodPlaces?: Array<FoodPlace>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: () => [StartStopPlace],
  })
  @ValidateNested()
  @Type(() => StartStopPlace)
  @IsOptional()
  startStopPlaces?: Array<StartStopPlace>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { City };
